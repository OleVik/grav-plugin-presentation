{% set theme_config = attribute(config.themes, config.system.pages.theme) %}
<!DOCTYPE html>
<html lang="{{ grav.language.getLanguage ?: 'en' }}">
  {% block head %}
  <head>
    {% block meta %}
      <meta charset="utf-8" />
      <title>{% if header.title %}{{ header.title|e('html') }} | {% endif %}{{ site.title|e('html') }}</title>
      {% include 'partials/metadata.html.twig' %}
      <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no">
    {% endblock meta %}
    <link rel="icon" type="image/png" href="{{ url('theme://images/favicon.png') }}" />
    <link rel="canonical" href="{{ page.url(true, true) }}" />
    {% block stylesheets %}
      {% if config.plugins['presentation'].transition %}
        {% do assets.addCss('plugin://presentation/css/transition.css', {'group': 'critical'}) %}
      {% endif %}
      {% if config.plugins['presentation'].builtin_css %}
        {% do assets.addCss('plugin://presentation/node_modules/reveal.js/css/reveal.css', {'group': 'presentation'}) %}
        {% if uri.query('showNotes') == 'separate-page' and uri.query('print-pdf') == true %}
          {% do assets.addCss('plugin://presentation/node_modules/reveal.js/css/theme/white.css', {'group': 'presentation'}) %}
          {% do assets.addCss('plugin://presentation/node_modules/reveal.js/css/print/pdf.css', {'group': 'presentation'}) %}
        {% else %}
          {% do assets.addCss('plugin://presentation/css/uib.css', {'group': 'presentation'}) %}
          {% do assets.addCss('plugin://timeline/assets/timeline.css', {'group': 'presentation'}) %}
        {% endif %}
      {% endif %}
      {% if config.plugins['presentation'].theme_css %}
        {% do assets.addCss('theme://css/custom.css') %}
      {% endif %}
    {% endblock %}
    {{ assets.css('critical')|raw }}
    {{ assets.css('presentation')|raw }}
  </head>
  {% endblock head %}

  <body id="top" class="{{ page.header.body_classes }}">
    {% if config.plugins['presentation'].transition %}
    <div id="page_transition">
      <div class="la-line-scale la-dark la-3x">
        <div style="color: #0B110D;"></div>
        <div style="color: #2C4D56;"></div>
        <div style="color: #C3AA72;"></div>
        <div style="color: #DC7612;"></div>
        <div style="color: #BD3200;"></div>
      </div>
    </div>
    {% endif %}
    {% block content %}
    <div class="reveal">
      <div class="slides">
        {{ page.content|raw }}
      </div>
    </div>
    {% endblock content %}
    {% block plugin_init %}
      {% if config.plugins['presentation'].builtin_js and config.plugins['presentation'].transition %}
      <script type="text/javascript">
      window.addEventListener("load", function(event) {
        javascript:document.getElementById("page_transition").style.visibility="hidden";
        javascript:document.getElementById("page_transition").style.opacity=0;
        javascript:document.getElementById("page_transition").style.display="none";
      }, false);
      </script>
      {% endif %}
    {% endblock %}
    {% block scripts %}
      {% if config.plugins['presentation'].builtin_js %}
        {% do assets.addJs('plugin://presentation/node_modules/reveal.js/lib/js/head.min.js', {'group': 'presentation'}) %}
        {% do assets.addJs('plugin://presentation/node_modules/reveal.js/js/reveal.js', {'group': 'presentation'}) %}
        {% do assets.addJs('plugin://presentation/node_modules/axios/dist/axios.min.js', {'group': 'presentation'}) %}
        {% do assets.addJs('plugin://presentation/node_modules/css-element-queries/src/ResizeSensor.js', {'group': 'presentation'}) %}
        {% do assets.addJs('plugin://presentation/node_modules/css-element-queries/src/ElementQueries.js', {'group': 'presentation'}) %}
      {% endif %}
      {% if config.plugins['presentation'].fontscale %}
        {% do assets.addJs('plugin://presentation/js/FlowType.js', {'group': 'presentation'}) %}
      {% endif %}
      {% if config.plugins['nomnoml-uml-diagrams'].enabled %}
        {% do assets.addJs('plugin://nomnoml-uml-diagrams/js/lodash.min.js', {'group': 'presentation'}) %}
        {% do assets.addJs('plugin://nomnoml-uml-diagrams/js/dagre.min.js', {'group': 'presentation'}) %}
        {% do assets.addJs('plugin://nomnoml-uml-diagrams/js/nomnoml.js', {'group': 'presentation'}) %}
      {% endif %}
    {% endblock %}
    {{ assets.js('presentation')|raw }}
    <script type="text/javascript">
    var reveal_init = {{ reveal_init }};
    window.addEventListener("load", function(event) {
      Reveal.initialize(reveal_init);
    }, false);
    </script>
    {% if config.plugins['presentation'].sync == 'browser' %}
    <script type="text/javascript">
    function findGetParameter(parameterName) {
      var result = null,
          tmp = [];
      location.search
          .substr(1)
          .split("&")
          .forEach(function (item) {
            tmp = item.split("=");
            if (tmp[0] === parameterName) result = decodeURIComponent(tmp[1]);
          });
      return result;
    }
    function GetClock() {
      var d = new Date();
      var nhour = d.getHours();
      var nmin = d.getMinutes();
      var nsec = d.getSeconds();
      if (nmin <= 9) {
        nmin = "0" + nmin;
      }
      if (nsec <= 9) {
        nsec = "0" + nsec;
      }
      var clocktext = "" + nhour + ":" + nmin + ":" + nsec + "";
      document.getElementById('clockbox').innerHTML=clocktext;
    }

    ElementQueries.listen();

    var bc = new BroadcastChannel('grav-presentation');
    window.addEventListener("load", function(event) {
      if (findGetParameter('admin') == 'yes') {
        Reveal.addEventListener('slidechanged', function( event ) {
          bc.postMessage({
            indexh: event.indexh,
            indexv: event.indexv,
            indexf: typeof event.indexf !== 'undefined' ? event.indexf : 0 
          });
        });
        Reveal.addEventListener('ready', function(event) {
          if (findGetParameter('admin') == 'yes') {
            var body = document.getElementById('top');
            body.insertAdjacentHTML('beforeend', '<div id="clockbox"></div>');
            GetClock();
            setInterval(GetClock, 1000);
          }
        });
      } else {
        bc.onmessage = function (event) {
          Reveal.slide(event.data.indexh, event.data.indexv, event.data.indexf);
        }
      }

      Reveal.addEventListener('ready', function(event) {
        var els = document.getElementsByClassName("fontscale");
        Array.prototype.forEach.call(els, function(el) {
            window.flowtype( el, {fontRatio: el.dataset.fontratio} );
        });
      });

    }, false);
    </script>
    {% elseif config.plugins['presentation'].sync == 'api' %}
        {% do assets.addJs('plugin://presentation/js/poll.js', {'group': 'bottom'}) %}
    {% endif %}
    {% if config.system.debugger.enabled %}
      {{ assets.css() }}
      {{ assets.js() }}
    {% endif %}
    {{ assets.js('bottom') }}
  </body>
</html>